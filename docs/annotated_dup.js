var annotated_dup =
[
    [ "_dictionary_", "struct__dictionary__.html", "struct__dictionary__" ],
    [ "_file_metadata", "struct__file__metadata.html", "struct__file__metadata" ],
    [ "_notifyDetails", "struct__notifyDetails.html", "struct__notifyDetails" ],
    [ "AK_agg_input", "structAK__agg__input.html", "structAK__agg__input" ],
    [ "AK_agg_value", "structAK__agg__value.html", "structAK__agg__value" ],
    [ "AK_block", "structAK__block.html", "structAK__block" ],
    [ "AK_block_activity", "structAK__block__activity.html", "structAK__block__activity" ],
    [ "AK_blocktable", "structAK__blocktable.html", "structAK__blocktable" ],
    [ "AK_command_recovery_struct", "structAK__command__recovery__struct.html", "structAK__command__recovery__struct" ],
    [ "AK_command_struct", "structAK__command__struct.html", "structAK__command__struct" ],
    [ "AK_create_table_struct", "structAK__create__table__struct.html", "structAK__create__table__struct" ],
    [ "AK_db_cache", "structAK__db__cache.html", "structAK__db__cache" ],
    [ "AK_debmod_state", "structAK__debmod__state.html", "structAK__debmod__state" ],
    [ "AK_header", "structAK__header.html", "structAK__header" ],
    [ "AK_mem_block", "structAK__mem__block.html", "structAK__mem__block" ],
    [ "AK_operand", "structAK__operand.html", "structAK__operand" ],
    [ "AK_query_mem", "structAK__query__mem.html", "structAK__query__mem" ],
    [ "AK_query_mem_dict", "structAK__query__mem__dict.html", "structAK__query__mem__dict" ],
    [ "AK_query_mem_lib", "structAK__query__mem__lib.html", "structAK__query__mem__lib" ],
    [ "AK_query_mem_result", "structAK__query__mem__result.html", "structAK__query__mem__result" ],
    [ "AK_redo_log", "structAK__redo__log.html", "structAK__redo__log" ],
    [ "AK_ref_item", "structAK__ref__item.html", "structAK__ref__item" ],
    [ "AK_results", "structAK__results.html", "structAK__results" ],
    [ "AK_synchronization_info", "structAK__synchronization__info.html", "structAK__synchronization__info" ],
    [ "AK_tuple_dict", "structAK__tuple__dict.html", "structAK__tuple__dict" ],
    [ "blocktable", "structblocktable.html", null ],
    [ "btree_node", "structbtree__node.html", "structbtree__node" ],
    [ "bucket_elem", "structbucket__elem.html", "structbucket__elem" ],
    [ "cost_eval_t", "structcost__eval__t.html", "structcost__eval__t" ],
    [ "DEBUG_LEVEL", "structDEBUG__LEVEL.html", null ],
    [ "DEBUG_TYPE", "structDEBUG__TYPE.html", null ],
    [ "drop_arguments", "structdrop__arguments.html", "structdrop__arguments" ],
    [ "hash_bucket", "structhash__bucket.html", "structhash__bucket" ],
    [ "hash_info", "structhash__info.html", "structhash__info" ],
    [ "intersect_attr", "structintersect__attr.html", "structintersect__attr" ],
    [ "list_node", "structlist__node.html", "structlist__node" ],
    [ "list_structure_ad", "structlist__structure__ad.html", "structlist__structure__ad" ],
    [ "list_structure_add", "structlist__structure__add.html", null ],
    [ "main_bucket", "structmain__bucket.html", "structmain__bucket" ],
    [ "memoryAddresses", "structmemoryAddresses.html", "structmemoryAddresses" ],
    [ "Observable", "structObservable.html", "structObservable" ],
    [ "observable_transaction", "structobservable__transaction.html", null ],
    [ "observable_transaction_struct", "structobservable__transaction__struct.html", "structobservable__transaction__struct" ],
    [ "Observer", "structObserver.html", "structObserver" ],
    [ "observer_lock", "structobserver__lock.html", "structobserver__lock" ],
    [ "projection_att_struct", "structprojection__att__struct.html", "structprojection__att__struct" ],
    [ "root_info", "structroot__info.html", "structroot__info" ],
    [ "rowroot_struct", "structrowroot__struct.html", "structrowroot__struct" ],
    [ "search_params", "structsearch__params.html", "structsearch__params" ],
    [ "search_result", "structsearch__result.html", "structsearch__result" ],
    [ "Stack", "structStack.html", "structStack" ],
    [ "struct_add", "structstruct__add.html", "structstruct__add" ],
    [ "Succesor", "structSuccesor.html", "structSuccesor" ],
    [ "table_addresses", "structtable__addresses.html", "structtable__addresses" ],
    [ "TestResult", "structTestResult.html", "structTestResult" ],
    [ "threadContainer", "structthreadContainer.html", "structthreadContainer" ],
    [ "transaction_list_elem", "structtransaction__list__elem.html", "structtransaction__list__elem" ],
    [ "transaction_list_head", "structtransaction__list__head.html", "structtransaction__list__head" ],
    [ "transaction_locks_list_elem", "structtransaction__locks__list__elem.html", "structtransaction__locks__list__elem" ],
    [ "transactionData", "structtransactionData.html", "structtransactionData" ],
    [ "TypeObservable", "structTypeObservable.html", "structTypeObservable" ],
    [ "TypeObserver", "structTypeObserver.html", "structTypeObserver" ],
    [ "Vertex", "structVertex.html", "structVertex" ]
];